    Reviewer - Tianle Chen
Date - 4/25/22
CSE3902_Project
File - Map1.cs
File Author - Tianle Chen, Andy Dong 
Time to Complete - 30 minutes

Comments
	- This class is very long and has a very low cohesion and high coupling, I think its maintainability probably need to be improved.
	- This class contain the functionalities that loading json map infos, creating different objects, storing all object information (such as positions), adding objects 
	at the game time, and even handling some game state music stuffs..
	- All the functionalities above can be distributed into different class, which can increase the cohesion and reduce coupling of each class:
	For example, the three game state music functions could be move to a music state class, which only link the the gamestate class and audioManager to handle the music 
	changes in different states.
	The load json function can be move to a jsonLoading class, and Map only need to call the jsonLoading to generate the map, this Map1 class do not need to access to 
	each sprite or items. This would be similar for the object adding functions, some objectAdder can be created by implmenting a objectAdder iterface, each Adder only
	need to get access to the map and a single object (such as a sprite), and the Map1 class itself only need to call Add functions in a list of such objectAdders.
	We can even create another map class to store the objects in the map, so that we don't need to contain the data structure details in this class
	- There are many way we can do to reducing the coupling and increase the cohesions, this Map1 class can only take care of generating the map, and the details of how
	to generate it (load, add or remove objects) can be encapsulated in other classes.
	- Hopefully I can get time to refactor this class..
	
	